Index: assets/node_modules/.cache/terser-webpack-plugin/content-v2/sha512/5a/09/78443a66c4f09969e613d7a251a98c94e48efff253b32ac4dc260f15f6fa6077b9b0428c30c11f5ee51e7eb6680c61b190760d005a3da7fefcb70ee8a595
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- assets/node_modules/.cache/terser-webpack-plugin/content-v2/sha512/5a/09/78443a66c4f09969e613d7a251a98c94e48efff253b32ac4dc260f15f6fa6077b9b0428c30c11f5ee51e7eb6680c61b190760d005a3da7fefcb70ee8a595	(date 1593419030919)
+++ assets/node_modules/.cache/terser-webpack-plugin/content-v2/sha512/5a/09/78443a66c4f09969e613d7a251a98c94e48efff253b32ac4dc260f15f6fa6077b9b0428c30c11f5ee51e7eb6680c61b190760d005a3da7fefcb70ee8a595	(date 1593419030919)
@@ -0,0 +1,1 @@
+{"code":"!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},n.r=function(t){Object.defineProperty(t,\"__esModule\",{value:!0})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=3)}([function(t,e,n){\"use strict\";!function(){var t=function(){if(\"function\"==typeof window.CustomEvent)return window.CustomEvent;function t(t,e){e=e||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent(\"CustomEvent\");return n.initCustomEvent(t,e.bubbles,e.cancelable,e.detail),n}return t.prototype=window.Event.prototype,t}();function e(t,e){var n=document.createElement(\"input\");return n.type=\"hidden\",n.name=t,n.value=e,n}function n(t){var n=t.getAttribute(\"data-to\"),r=e(\"_method\",t.getAttribute(\"data-method\")),o=e(\"_csrf_token\",t.getAttribute(\"data-csrf\")),i=document.createElement(\"form\"),u=t.getAttribute(\"target\");i.method=\"get\"===t.getAttribute(\"data-method\")?\"get\":\"post\",i.action=n,i.style.display=\"hidden\",u&&(i.target=u),i.appendChild(o),i.appendChild(r),document.body.appendChild(i),i.submit()}window.addEventListener(\"click\",(function(e){for(var r=e.target;r&&r.getAttribute;){var o=new t(\"phoenix.link.click\",{bubbles:!0,cancelable:!0});if(!r.dispatchEvent(o))return e.preventDefault(),e.stopImmediatePropagation(),!1;if(r.getAttribute(\"data-method\"))return n(r),e.preventDefault(),!1;r=r.parentNode}}),!1),window.addEventListener(\"phoenix.link.click\",(function(t){var e=t.target.getAttribute(\"data-confirm\");e&&!window.confirm(e)&&t.preventDefault()}),!1)}()},function(t,e,n){},function(t,e,n){\"use strict\";n.r(e);n(1),n(0)},function(t,e,n){t.exports=n(2)}]);","extractedComments":[]}
\ No newline at end of file
Index: priv/static/js/material/plugins/editors/codemirror/mode/livescript/livescript-5c5a5ca6c3c59910fb825b0125a4766a.ls
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- priv/static/js/material/plugins/editors/codemirror/mode/livescript/livescript-5c5a5ca6c3c59910fb825b0125a4766a.ls	(date 1593767589355)
+++ priv/static/js/material/plugins/editors/codemirror/mode/livescript/livescript-5c5a5ca6c3c59910fb825b0125a4766a.ls	(date 1593767589355)
@@ -0,0 +1,266 @@
+/**
+ * Link to the project's GitHub page:
+ * https://github.com/duralog/CodeMirror
+ */
+CodeMirror.defineMode 'livescript', (conf) ->
+  tokenBase = (stream, state) ->
+    #indent =
+    if next_rule = state.next or \start
+      state.next = state.next
+      if Array.isArray nr = Rules[next_rule]
+        for r in nr
+          if r.regex and m = stream.match r.regex
+            state.next = r.next
+            return r.token
+        stream.next!
+        return \error
+      if stream.match r = Rules[next_rule]
+        if r.regex and stream.match r.regex
+          state.next = r.next
+          return r.token
+        else
+          stream.next!
+          return \error
+    stream.next!
+    return 'error'
+  external = {
+    startState: (basecolumn) ->
+      {
+        next: \start
+        lastToken: null
+      }
+    token: (stream, state) ->
+      style = tokenBase stream, state #tokenLexer stream, state
+      state.lastToken = {
+        style: style
+        indent: stream.indentation!
+        content: stream.current!
+      }
+      style.replace /\./g, ' '
+    indent: (state, textAfter) ->
+      # XXX this won't work with backcalls
+      indentation = state.lastToken.indent
+      if state.lastToken.content.match indenter then indentation += 2
+      return indentation
+  }
+  external
+
+### Highlight Rules
+# taken from mode-ls.ls
+
+indenter = // (?
+    : [({[=:]
+    | [-~]>
+    | \b (?: e(?:lse|xport) | d(?:o|efault) | t(?:ry|hen) | finally |
+             import (?:\s* all)? | const | var |
+             let | new | catch (?:\s* #identifier)? )
+  ) \s* $ //
+
+identifier = /(?![\d\s])[$\w\xAA-\uFFDC](?:(?!\s)[$\w\xAA-\uFFDC]|-[A-Za-z])*/$
+keywordend = /(?![$\w]|-[A-Za-z]|\s*:(?![:=]))/$
+stringfill = token: \string, regex: '.+'
+
+Rules =
+  start:
+    * token: \comment.doc
+      regex: '/\\*'
+      next : \comment
+
+    * token: \comment
+      regex: '#.*'
+
+    * token: \keyword
+      regex: //(?
+        :t(?:h(?:is|row|en)|ry|ypeof!?)
+        |c(?:on(?:tinue|st)|a(?:se|tch)|lass)
+        |i(?:n(?:stanceof)?|mp(?:ort(?:\s+all)?|lements)|[fs])
+        |d(?:e(?:fault|lete|bugger)|o)
+        |f(?:or(?:\s+own)?|inally|unction)
+        |s(?:uper|witch)
+        |e(?:lse|x(?:tends|port)|val)
+        |a(?:nd|rguments)
+        |n(?:ew|ot)
+        |un(?:less|til)
+        |w(?:hile|ith)
+        |o[fr]|return|break|let|var|loop
+      )//$ + keywordend
+
+    * token: \constant.language
+      regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend
+
+    * token: \invalid.illegal
+      regex: '(?
+        :p(?:ackage|r(?:ivate|otected)|ublic)
+        |i(?:mplements|nterface)
+        |enum|static|yield
+      )' + keywordend
+
+    * token: \language.support.class
+      regex: '(?
+        :R(?:e(?:gExp|ferenceError)|angeError)
+        |S(?:tring|yntaxError)
+        |E(?:rror|valError)
+        |Array|Boolean|Date|Function|Number|Object|TypeError|URIError
+      )' + keywordend
+
+    * token: \language.support.function
+      regex: '(?
+        :is(?:NaN|Finite)
+        |parse(?:Int|Float)
+        |Math|JSON
+        |(?:en|de)codeURI(?:Component)?
+      )' + keywordend
+
+    * token: \variable.language
+      regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend
+
+    * token: \identifier
+      regex: identifier + /\s*:(?![:=])/$
+
+    * token: \variable
+      regex: identifier
+
+    * token: \keyword.operator
+      regex: /(?:\.{3}|\s+\?)/$
+
+    * token: \keyword.variable
+      regex: /(?:@+|::|\.\.)/$
+      next : \key
+
+    * token: \keyword.operator
+      regex: /\.\s*/$
+      next : \key
+
+    * token: \string
+      regex: /\\\S[^\s,;)}\]]*/$
+
+    * token: \string.doc
+      regex: \'''
+      next : \qdoc
+
+    * token: \string.doc
+      regex: \"""
+      next : \qqdoc
+
+    * token: \string
+      regex: \'
+      next : \qstring
+
+    * token: \string
+      regex: \"
+      next : \qqstring
+
+    * token: \string
+      regex: \`
+      next : \js
+
+    * token: \string
+      regex: '<\\['
+      next : \words
+
+    * token: \string.regex
+      regex: \//
+      next : \heregex
+
+    * token: \string.regex
+      regex: //
+        /(?: [^ [ / \n \\ ]*
+          (?: (?: \\.
+                | \[ [^\]\n\\]* (?:\\.[^\]\n\\]*)* \]
+              ) [^ [ / \n \\ ]*
+          )*
+        )/ [gimy$]{0,4}
+      //$
+      next : \key
+
+    * token: \constant.numeric
+      regex: '(?:0x[\\da-fA-F][\\da-fA-F_]*
+                |(?:[2-9]|[12]\\d|3[0-6])r[\\da-zA-Z][\\da-zA-Z_]*
+                |(?:\\d[\\d_]*(?:\\.\\d[\\d_]*)?|\\.\\d[\\d_]*)
+                 (?:e[+-]?\\d[\\d_]*)?[\\w$]*)'
+
+    * token: \lparen
+      regex: '[({[]'
+
+    * token: \rparen
+      regex: '[)}\\]]'
+      next : \key
+
+    * token: \keyword.operator
+      regex: \\\S+
+
+    * token: \text
+      regex: \\\s+
+
+  heregex:
+    * token: \string.regex
+      regex: '.*?//[gimy$?]{0,4}'
+      next : \start
+    * token: \string.regex
+      regex: '\\s*#{'
+    * token: \comment.regex
+      regex: '\\s+(?:#.*)?'
+    * token: \string.regex
+      regex: '\\S+'
+
+  key:
+    * token: \keyword.operator
+      regex: '[.?@!]+'
+    * token: \identifier
+      regex: identifier
+      next : \start
+    * token: \text
+      regex: '.'
+      next : \start
+
+  comment:
+    * token: \comment.doc
+      regex: '.*?\\*/'
+      next : \start
+    * token: \comment.doc
+      regex: '.+'
+
+  qdoc:
+    token: \string
+    regex: ".*?'''"
+    next : \key
+    stringfill
+
+  qqdoc:
+    token: \string
+    regex: '.*?"""'
+    next : \key
+    stringfill
+
+  qstring:
+    token: \string
+    regex: /[^\\']*(?:\\.[^\\']*)*'/$
+    next : \key
+    stringfill
+
+  qqstring:
+    token: \string
+    regex: /[^\\"]*(?:\\.[^\\"]*)*"/$
+    next : \key
+    stringfill
+
+  js:
+    token: \string
+    regex: /[^\\`]*(?:\\.[^\\`]*)*`/$
+    next : \key
+    stringfill
+
+  words:
+    token: \string
+    regex: '.*?\\]>'
+    next : \key
+    stringfill
+
+# for optimization, precompile the regexps
+for idx, r of Rules
+  if Array.isArray r
+    for rr, i in r
+      if rr.regex then Rules[idx][i].regex = new RegExp '^'+rr.regex
+  else if r.regex then Rules[idx].regex = new RegExp '^'+r.regex
+
+CodeMirror.defineMIME 'text/x-livescript', 'livescript'
Index: assets/node_modules/.cache/terser-webpack-plugin/index-v5/e6/8f/f4885d4502add7e1873ca4657c0435fc9fc721b31f97edc53ee46b39c021
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- assets/node_modules/.cache/terser-webpack-plugin/index-v5/e6/8f/f4885d4502add7e1873ca4657c0435fc9fc721b31f97edc53ee46b39c021	(date 1593419030927)
+++ assets/node_modules/.cache/terser-webpack-plugin/index-v5/e6/8f/f4885d4502add7e1873ca4657c0435fc9fc721b31f97edc53ee46b39c021	(date 1593419030927)
@@ -0,0 +1,2 @@
+
+d57b0daff6b54fea3156bb5218b6290e54728b43	{"key":"{\"terser\":\"4.4.0\",\"node_version\":\"v13.14.0\",\"terser-webpack-plugin\":\"1.4.1\",\"terser-webpack-plugin-options\":{\"test\":/\\.m?js(\\?.*)?$/i,\"chunkFilter\":() => true,\"warningsFilter\":() => true,\"extractComments\":false,\"sourceMap\":false,\"cache\":true,\"cacheKeys\":defaultCacheKeys => defaultCacheKeys,\"parallel\":true,\"terserOptions\":{\"output\":{\"comments\":/^\\**!|@preserve|@license|@cc_on/i}}},\"hash\":\"0c2f34fffefdcd60e34ec461483cb2c1\"}","integrity":"sha512-Wgl4RDpmxPCZaeYT16JRqYyU5I7/8lOzKsTcJg8V9vpgd7mwQowwwR9e5R5+tmgMYbGQdg0AWj2n/vy3DuillQ==","time":1593419030929,"size":2001}
\ No newline at end of file
